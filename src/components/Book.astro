---
import EleventyFetch from "@11ty/eleventy-fetch";
import { getEntry } from "astro:content";

import { mergeShelfEntries } from "../ts/utils";

import About from "./About.astro";
import Author from "./Author.astro";
import Award from "./Award.astro";
import Cover from "./Cover.astro";
import Dates from "./Dates.astro";
import Description from "./Description.astro";
import ISBN from "./ISBN.astro";
import Notes from "./Notes.astro";
import PublicationInfo from "./PublicationInfo.astro";
import ShelfLocations from "./ShelfLocations.astro";
import Title from "./Title.astro";

const {
    id,
    displayFormat = "full",
    showName = "true",
    shelfID = "",
} = Astro.props;
const bookEntry: any = await getEntry("allBooks", id);
let book = mergeShelfEntries(bookEntry.data.shelfEntries, shelfID);

let bookData: any = {};
const isbndbAPI = `https://api2.isbndb.com/book/${id}`;
try {
    bookData = await EleventyFetch(isbndbAPI, {
        type: "json",
        fetchOptions: {
            headers: {
                "Content-Type": "application/json",
                Authorization: import.meta.env.ISBNDB_TOKEN,
            },
        },
    });
} catch {
    console.log("response error is:", Response.error());
}

const { book: bookDataFromAPI } = bookData;
const bookFromAPI = {
    publisher: bookDataFromAPI.publisher,
    description: bookDataFromAPI.synopsis,
    image: bookDataFromAPI.image,
    numberOfPages: bookDataFromAPI.pages.toString(),
    datePublished: bookDataFromAPI.date_published,
    subjexts: bookDataFromAPI.subjects,
    author: bookDataFromAPI.authors,
    title: bookDataFromAPI.title_long,
};

book = { ...bookFromAPI, ...book };

const props = {
    book,
    displayFormat,
    showName,
    shelfID,
};
---

<div class={`book ${displayFormat}`} data-display-format={displayFormat}>
    <div class="info">
        <Title {...props} />
        <Author {...props} />
    </div>
    <div class="details">
        <dl class="bookData">
            <ISBN {...props} />
            <PublicationInfo {...props} />
            <Description {...props} />
            <About {...props} />
            <Award {...props} />
        </dl>
        <div class="collectionInfo">
            <Notes {...props} />
            <ShelfLocations {...props} />
            <Dates {...props} />
        </div>
    </div>
    <Cover {...props} />
    <details class="data">
        <summary>Book Data</summary>
        <pre>{JSON.stringify(bookEntry.data, null, 2)}</pre>
    </details>
</div>
